public with sharing class AddBundleController {
                
        public Bundle_Connector__c bundle1{get; set;}
        public Bundle_Connector__c bundle2{get; set;}
        public Bundle_Connector__c bundle3{get; set;}
        public Bundle_Connector__c bundle4{get; set;}
        public Bundle_Connector__c bundle5{get; set;}
        
        
        
        private final Opportunity origOp;
        
        public string errtxt = '';
        
        public String geterrtxt(){ return errtxt;}
        

        
    public AddBundleController(ApexPages.StandardController controller) {       
        
        
        Opportunity tempOpp = (Opportunity)controller.getRecord();
        this.origOp = [select id, pricebook2Id from Opportunity where id = :tempOpp.Id limit 1];
        system.debug(origOp);
        
            bundle1 = new Bundle_Connector__c(quantity__c = 1);
            bundle2 = new Bundle_Connector__c(quantity__c = 1);
            bundle3 = new Bundle_Connector__c(quantity__c = 1);
            bundle4 = new Bundle_Connector__c(quantity__c = 1);
            bundle5 = new Bundle_Connector__c(quantity__c = 1);

                        
    }

        
        public PageReference cancel(){
                PageReference opPage = new ApexPages.StandardController(origOp).view();
                opPage.setRedirect(true);
                return opPage;
        }
        
        public PageReference add(){
                
                system.debug(bundle1);
                
                id[] bundleIdList = new id[]{};
                Bundle_Connector__c[] inputBundleConList = new Bundle_Connector__c[]{};
                Decimal[] quantityList = new Decimal[]{};
                id[] productIdList = new id[]{};
                Product2[] productList = new Product2[]{};
        
                inputBundleConList.add(bundle1);
                inputBundleConList.add(bundle2);
                inputBundleConList.add(bundle3);
                inputBundleConList.add(bundle4);
                inputBundleConList.add(bundle5);
                                                
                for (Bundle_Connector__c bc: inputBundleConList){
                        system.debug(bc);
                        
                        if (bc.Bundle__c != NULL) {
                                system.debug(bc.Bundle__c);
                                bundleIdList.add(bc.bundle__c);
                                quantityList.add(bc.quantity__c);
                        }
                }
                
                Bundle_Connector__c[] bundleConList = [Select Bundle__c,Product__c,Quantity__c from Bundle_Connector__c where Bundle__c IN :bundleIdList];
                
                Map<id,Bundle_Connector__c[]> connectorMap = new Map<id,Bundle_Connector__c[]>{};
                
                
                
                for (Bundle_Connector__c bc: bundleConList){
                        
                        productIdList.add(bc.Product__c);
                        
                        if (connectorMap.containsKey(bc.Bundle__c)){
                                connectorMap.get(bc.Bundle__c).add(bc);
                        }
                        else {
                                Bundle_Connector__c[] inter = new Bundle_Connector__c[]{};
                                inter.add(bc);
                                connectorMap.put(bc.Bundle__c, inter);
                        }
                }
                
                system.debug(connectorMap);
                
                Map<id,PricebookEntry> priceMap = new Map<id,PricebookEntry>{};
                
                PricebookEntry[] pricebookList = [Select id, Pricebook2Id, Product2Id, UnitPrice from PricebookEntry where 
                                                                                        Product2Id IN: productIdList AND Pricebook2Id = :origOp.Pricebook2Id];
                
                for (PricebookEntry pE: pricebookList){
                        priceMap.put(pE.Product2Id,pE);
                }
                system.debug(priceMap);
                
                OpportunityLineItem[] insertList = new OpportunityLineItem[]{};
                Boolean err = false;
                for (Integer i = 0; i != bundleIdList.size(); ++i){
                        Decimal mult = quantityList.get(i);
                        
                        if(connectorMap.containsKey(bundleIdList.get(i))){
                                for (Bundle_Connector__c bc: connectorMap.get(bundleIdList.get(i))){
                                        if(err) break;
                                        if(priceMap.containsKey(bc.Product__c)){
                                                PricebookEntry pE = priceMap.get(bc.Product__c);
                                                system.debug(pE);
                                                
                                                if (pE.Pricebook2Id == origOp.Pricebook2Id){
                                                        
                                                        OpportunityLineItem LI = new OpportunityLineItem();
                                                        LI.OpportunityId = origOp.Id;
                                                        LI.PricebookEntryId = pE.id;
                                                        LI.UnitPrice = pE.UnitPrice;
                                                        LI.Quantity = mult*bc.Quantity__c;
                                                        
                                                        insertList.add(LI);
                                                }
                                        }else{
                                                err = true;
                                                //origOp.addError('One or more products in this bundle are not in the selected pricebook. Please change your pricebook or contact an administrator for assistance.');
                                        }
                                }
                        }
                }
                
                if (!insertList.isEmpty() && !err){
                        insert insertList;
                }
                
                if(err){
                        errtxt = 'One or more products in these bundles are not in the selected pricebook. Please change your pricebook or contact an administrator for assistance.';
                        return null;
                }
                PageReference opPage = new ApexPages.StandardController(origOp).view();
                opPage.setRedirect(true);
                return opPage;          
        }
        testMethod static void test1(){
            testBundle();
        }
    public static void testBundle(){
        Integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}